--- Introduction ---

Before using these solutions you have to do two things.

First, copy all the files you find in this directory, in the same directory of
the lab materials ${some_path}/lab4/materials/4.2/

Then run the following commands to create a subdirectory called tutorial in the
directory of the lab materials.

cd ${some_path}/lab4/materials/4.2/
mkdir tutorial
cd tutorial

Using a separate subdirectory for the solutions allows to separate the files
generated from the commands from the files given by the excercise.
It also allows to cleanup more easily if there are mistakes, without having to
select manually all the file to remove and all the files to preserve.

The following solutions contain commands that are intended to be launched from
inside the newly created tutorial directory and they use relative paths.
Adjust the paths if you want to run them from different locations or if you
placed the files coming from the solutions in some other place.

--- Solutions ---

1)

The xml file necessary to integrate the component in the design is IP.xml.
The xml file necessary for the testbench is example_testbench.xml.
The command line to generate the design and to simulate it with the provided testbench is:

bambu ../main.c  --C-no-parse=../operations.c ../IP.xml  --file-input-data=../operations.v --std=c11 --simulate --simulator=VERILATOR --generate-tb=example_testbench.xml

2)

The command line to run the Discrepancy Analysis is 

bambu ../main.c  --C-no-parse=../operations.c ../IP.xml  --file-input-data=../operations.v --std=c11 --simulate --simulator=VERILATOR --generate-tb=example_testbench.xml --discrepancy

Running this command it is possible to see that the wrong module is times2
